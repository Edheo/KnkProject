using KnkInterfaces.Enumerations;
using System;
using System.Reflection;

namespace KnkInterfaces.Interfaces
{
    public interface KnkItemItf
    {
        KnkItemItf Load<T>(int aId) where T : KnkItemItf, new();

        string PrimaryKey();
        bool PrimaryKeyAutoGenerated();
        object PropertyGet(string aProperty);
        void PropertySet(string aProperty, object aValue);

        KnkEntityIdentifierItf PrimaryKeyValue();

        KnkListItf GetParent();
        void SetParent(KnkListItf aParent);

        KnkConnectionItf Connection();
        KnkTableEntityItf SourceEntity();

        KnkEntityIdentifierItf UserCreationId { get; set; }
        KnkEntityIdentifierItf UserModifiedId { get; set; }
        KnkEntityIdentifierItf UserDeletedId { get; set; }

        bool Deleted { get; }

        DateTime? CreationDate { get; set; }
        DateTime? ModifiedDate { get; set; }
        DateTime? DeletedDate { get; set; }

        string CreationText { get; set; }
        string ModifiedText { get; set; }
        string DeletedText { get; set; }

        T Clone<T>() where T : KnkItemItf, new();

        void Update(string aMessage);
        void Delete(string aMessage);
        bool IsNew();
        bool IsChanged();

        string UpdateMessage();
        string UpdateMessage(string aNewMessage);

        UpdateStatusEnu Status();

        string ToString();
    }
}
